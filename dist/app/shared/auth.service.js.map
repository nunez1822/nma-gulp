{"version":3,"sources":["shared/auth.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAQA;gBACE,qBAAoB,MAAc;oBAAd,WAAM,GAAN,MAAM,CAAQ;gBAAG,CAAC;gBAEtC,gCAAU,GAAV,UAAW,IAAU;oBACnB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;yBAC7E,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7B,CAAC;gBAED,gCAAU,GAAV,UAAW,IAAU;oBACnB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;yBACzE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE7B,CAAC;gBAEO,iCAAW,GAAnB,UAAqB,KAAU;oBAC7B,oEAAoE;oBACpE,8DAA8D;oBAC9D,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;wBAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;oBAC1E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;oBAChD,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;gBAED,4BAAM,GAAN;oBACE,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpC,CAAC;gBAED,qCAAe,GAAf;oBACE,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,CAAC;oBAEvC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;wBACT,MAAM,CAAC,IAAI,CAAC;oBACd,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,KAAK,CAAC;oBACf,CAAC;gBACH,CAAC;gBArCH;oBAAC,iBAAU,EAAE;;+BAAA;gBAsCb,kBAAC;YAAD,CArCA,AAqCC,IAAA;YArCD,qCAqCC,CAAA","file":"app/shared/auth.service.js","sourcesContent":["import { Injectable } from \"@angular/core\";\n\nimport { User } from \"./user.interface\";\nimport { Router } from \"@angular/router\";\n\ndeclare var firebase: any;\n\n@Injectable()\nexport class AuthService {\n  constructor(private router: Router) {}\n\n  signupUser(user: User) {\n    return firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n      .catch(this.handleError);\n  }\n\n  signinUser(user: User) {\n    return firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n      .catch(this.handleError);\n      \n  }\n\n  private handleError (error: any) {\n    // In a real world app, we might use a remote logging infrastructure\n    // We'd also dig deeper into the error to get a better message\n    let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.error(errMsg); // log to console instead\n    return Promise.reject(errMsg);\n  }\n\n  logout() {\n    firebase.auth().signOut();\n    this.router.navigate(['/signin']);\n  }\n\n  isAuthenticated() {\n    var user = firebase.auth().currentUser;\n\n    if (user) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n"],"sourceRoot":"/source/"}